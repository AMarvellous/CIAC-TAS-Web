//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace adminlte.TASProgramaService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TASProgramaSet", Namespace="http://schemas.datacontract.org/2004/07/WebObjetos")]
    [System.SerializableAttribute()]
    public partial class TASProgramaSet : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> ltTASProgramaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> ltTASProgramaEliminadoField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> ltTASPrograma {
            get {
                return this.ltTASProgramaField;
            }
            set {
                if ((object.ReferenceEquals(this.ltTASProgramaField, value) != true)) {
                    this.ltTASProgramaField = value;
                    this.RaisePropertyChanged("ltTASPrograma");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> ltTASProgramaEliminado {
            get {
                return this.ltTASProgramaEliminadoField;
            }
            set {
                if ((object.ReferenceEquals(this.ltTASProgramaEliminadoField, value) != true)) {
                    this.ltTASProgramaEliminadoField = value;
                    this.RaisePropertyChanged("ltTASProgramaEliminado");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TASProgramaEntity", Namespace="http://schemas.datacontract.org/2004/07/WebObjetos")]
    [System.SerializableAttribute()]
    public partial class TASProgramaEntity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Decimal1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private decimal Decimal2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescripcionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Entero1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long Entero2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fecha1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Fecha2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Logico1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool Logico2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ObservacionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgramaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SubCompaniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Texto0Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Texto1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Texto2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Texto3Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Texto4Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UClaseField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private adminlte.TASProgramaService.Estado UEstadoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool USelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UUsuarioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Decimal1 {
            get {
                return this.Decimal1Field;
            }
            set {
                if ((this.Decimal1Field.Equals(value) != true)) {
                    this.Decimal1Field = value;
                    this.RaisePropertyChanged("Decimal1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public decimal Decimal2 {
            get {
                return this.Decimal2Field;
            }
            set {
                if ((this.Decimal2Field.Equals(value) != true)) {
                    this.Decimal2Field = value;
                    this.RaisePropertyChanged("Decimal2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Descripcion {
            get {
                return this.DescripcionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescripcionField, value) != true)) {
                    this.DescripcionField = value;
                    this.RaisePropertyChanged("Descripcion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Entero1 {
            get {
                return this.Entero1Field;
            }
            set {
                if ((this.Entero1Field.Equals(value) != true)) {
                    this.Entero1Field = value;
                    this.RaisePropertyChanged("Entero1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Entero2 {
            get {
                return this.Entero2Field;
            }
            set {
                if ((this.Entero2Field.Equals(value) != true)) {
                    this.Entero2Field = value;
                    this.RaisePropertyChanged("Entero2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha1 {
            get {
                return this.Fecha1Field;
            }
            set {
                if ((this.Fecha1Field.Equals(value) != true)) {
                    this.Fecha1Field = value;
                    this.RaisePropertyChanged("Fecha1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Fecha2 {
            get {
                return this.Fecha2Field;
            }
            set {
                if ((this.Fecha2Field.Equals(value) != true)) {
                    this.Fecha2Field = value;
                    this.RaisePropertyChanged("Fecha2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Logico1 {
            get {
                return this.Logico1Field;
            }
            set {
                if ((this.Logico1Field.Equals(value) != true)) {
                    this.Logico1Field = value;
                    this.RaisePropertyChanged("Logico1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Logico2 {
            get {
                return this.Logico2Field;
            }
            set {
                if ((this.Logico2Field.Equals(value) != true)) {
                    this.Logico2Field = value;
                    this.RaisePropertyChanged("Logico2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Observacion {
            get {
                return this.ObservacionField;
            }
            set {
                if ((object.ReferenceEquals(this.ObservacionField, value) != true)) {
                    this.ObservacionField = value;
                    this.RaisePropertyChanged("Observacion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Programa {
            get {
                return this.ProgramaField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgramaField, value) != true)) {
                    this.ProgramaField = value;
                    this.RaisePropertyChanged("Programa");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string SubCompania {
            get {
                return this.SubCompaniaField;
            }
            set {
                if ((object.ReferenceEquals(this.SubCompaniaField, value) != true)) {
                    this.SubCompaniaField = value;
                    this.RaisePropertyChanged("SubCompania");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texto0 {
            get {
                return this.Texto0Field;
            }
            set {
                if ((object.ReferenceEquals(this.Texto0Field, value) != true)) {
                    this.Texto0Field = value;
                    this.RaisePropertyChanged("Texto0");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texto1 {
            get {
                return this.Texto1Field;
            }
            set {
                if ((object.ReferenceEquals(this.Texto1Field, value) != true)) {
                    this.Texto1Field = value;
                    this.RaisePropertyChanged("Texto1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texto2 {
            get {
                return this.Texto2Field;
            }
            set {
                if ((object.ReferenceEquals(this.Texto2Field, value) != true)) {
                    this.Texto2Field = value;
                    this.RaisePropertyChanged("Texto2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texto3 {
            get {
                return this.Texto3Field;
            }
            set {
                if ((object.ReferenceEquals(this.Texto3Field, value) != true)) {
                    this.Texto3Field = value;
                    this.RaisePropertyChanged("Texto3");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Texto4 {
            get {
                return this.Texto4Field;
            }
            set {
                if ((object.ReferenceEquals(this.Texto4Field, value) != true)) {
                    this.Texto4Field = value;
                    this.RaisePropertyChanged("Texto4");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UClase {
            get {
                return this.UClaseField;
            }
            set {
                if ((object.ReferenceEquals(this.UClaseField, value) != true)) {
                    this.UClaseField = value;
                    this.RaisePropertyChanged("UClase");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public adminlte.TASProgramaService.Estado UEstado {
            get {
                return this.UEstadoField;
            }
            set {
                if ((this.UEstadoField.Equals(value) != true)) {
                    this.UEstadoField = value;
                    this.RaisePropertyChanged("UEstado");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool USel {
            get {
                return this.USelField;
            }
            set {
                if ((this.USelField.Equals(value) != true)) {
                    this.USelField = value;
                    this.RaisePropertyChanged("USel");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UUsuario {
            get {
                return this.UUsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UUsuarioField, value) != true)) {
                    this.UUsuarioField = value;
                    this.RaisePropertyChanged("UUsuario");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Estado", Namespace="http://schemas.datacontract.org/2004/07/WebObjetos")]
    public enum Estado : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Added = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Unchanged = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Modified = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Deleted = 3,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TASProgramaService.TASProgramaInterface")]
    public interface TASProgramaInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebNuevo", ReplyAction="http://tempuri.org/TASProgramaInterface/WebNuevoResponse")]
        adminlte.TASProgramaService.TASProgramaSet WebNuevo(string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebNuevo", ReplyAction="http://tempuri.org/TASProgramaInterface/WebNuevoResponse")]
        System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebNuevoAsync(string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebGuardar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebGuardarResponse")]
        long WebGuardar(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, bool EsNuevo, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebGuardar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebGuardarResponse")]
        System.Threading.Tasks.Task<long> WebGuardarAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, bool EsNuevo, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebEliminar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebEliminarResponse")]
        long WebEliminar(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebEliminar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebEliminarResponse")]
        System.Threading.Tasks.Task<long> WebEliminarAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebEliminarDetalle", ReplyAction="http://tempuri.org/TASProgramaInterface/WebEliminarDetalleResponse")]
        long WebEliminarDetalle(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebEliminarDetalle", ReplyAction="http://tempuri.org/TASProgramaInterface/WebEliminarDetalleResponse")]
        System.Threading.Tasks.Task<long> WebEliminarDetalleAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebSeleccionar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebSeleccionarResponse")]
        adminlte.TASProgramaService.TASProgramaSet WebSeleccionar(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebSeleccionar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebSeleccionarResponse")]
        System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebSeleccionarAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebRecalcular", ReplyAction="http://tempuri.org/TASProgramaInterface/WebRecalcularResponse")]
        adminlte.TASProgramaService.TASProgramaSet WebRecalcular(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebRecalcular", ReplyAction="http://tempuri.org/TASProgramaInterface/WebRecalcularResponse")]
        System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebRecalcularAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaBloquear", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaBloquearResponse")]
        long WebTASProgramaBloquear(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaBloquear", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaBloquearResponse")]
        System.Threading.Tasks.Task<long> WebTASProgramaBloquearAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaDesbloquear", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaDesbloquearResponse")]
        long WebTASProgramaDesbloquear(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaDesbloquear", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaDesbloquearResponse")]
        System.Threading.Tasks.Task<long> WebTASProgramaDesbloquearAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoPor", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoPorResponse")]
        string WebTASProgramaEsBloqueadoPor(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoPor", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoPorResponse")]
        System.Threading.Tasks.Task<string> WebTASProgramaEsBloqueadoPorAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueado", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoResponse")]
        bool WebTASProgramaEsBloqueado(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueado", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaEsBloqueadoResponse")]
        System.Threading.Tasks.Task<bool> WebTASProgramaEsBloqueadoAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarTodo", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarTodoResponse")]
        System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionarTodo(string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarTodo", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarTodoResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarTodoAsync(string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarResponse")]
        System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionar(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionar", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarXSubCompania", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarXSubCompaniaResp" +
            "onse")]
        System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionarXSubCompania(string SubCompania, string strAKASesion, string strAKASubCompania);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarXSubCompania", ReplyAction="http://tempuri.org/TASProgramaInterface/WebTASProgramaSeleccionarXSubCompaniaResp" +
            "onse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarXSubCompaniaAsync(string SubCompania, string strAKASesion, string strAKASubCompania);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TASProgramaInterfaceChannel : adminlte.TASProgramaService.TASProgramaInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TASProgramaInterfaceClient : System.ServiceModel.ClientBase<adminlte.TASProgramaService.TASProgramaInterface>, adminlte.TASProgramaService.TASProgramaInterface {
        
        public TASProgramaInterfaceClient() {
        }
        
        public TASProgramaInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TASProgramaInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TASProgramaInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TASProgramaInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public adminlte.TASProgramaService.TASProgramaSet WebNuevo(string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebNuevo(strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebNuevoAsync(string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebNuevoAsync(strAKASesion, strAKASubCompania);
        }
        
        public long WebGuardar(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, bool EsNuevo, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebGuardar(setTASPrograma, EsNuevo, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<long> WebGuardarAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, bool EsNuevo, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebGuardarAsync(setTASPrograma, EsNuevo, strAKASesion, strAKASubCompania);
        }
        
        public long WebEliminar(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebEliminar(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<long> WebEliminarAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebEliminarAsync(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public long WebEliminarDetalle(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebEliminarDetalle(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<long> WebEliminarDetalleAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebEliminarDetalleAsync(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public adminlte.TASProgramaService.TASProgramaSet WebSeleccionar(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebSeleccionar(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebSeleccionarAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebSeleccionarAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public adminlte.TASProgramaService.TASProgramaSet WebRecalcular(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebRecalcular(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<adminlte.TASProgramaService.TASProgramaSet> WebRecalcularAsync(adminlte.TASProgramaService.TASProgramaSet setTASPrograma, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebRecalcularAsync(setTASPrograma, strAKASesion, strAKASubCompania);
        }
        
        public long WebTASProgramaBloquear(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaBloquear(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<long> WebTASProgramaBloquearAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaBloquearAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public long WebTASProgramaDesbloquear(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaDesbloquear(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<long> WebTASProgramaDesbloquearAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaDesbloquearAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public string WebTASProgramaEsBloqueadoPor(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaEsBloqueadoPor(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<string> WebTASProgramaEsBloqueadoPorAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaEsBloqueadoPorAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public bool WebTASProgramaEsBloqueado(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaEsBloqueado(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<bool> WebTASProgramaEsBloqueadoAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaEsBloqueadoAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionarTodo(string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionarTodo(strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarTodoAsync(string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionarTodoAsync(strAKASesion, strAKASubCompania);
        }
        
        public System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionar(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionar(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarAsync(string SubCompania, string Programa, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionarAsync(SubCompania, Programa, strAKASesion, strAKASubCompania);
        }
        
        public System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity> WebTASProgramaSeleccionarXSubCompania(string SubCompania, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionarXSubCompania(SubCompania, strAKASesion, strAKASubCompania);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<adminlte.TASProgramaService.TASProgramaEntity>> WebTASProgramaSeleccionarXSubCompaniaAsync(string SubCompania, string strAKASesion, string strAKASubCompania) {
            return base.Channel.WebTASProgramaSeleccionarXSubCompaniaAsync(SubCompania, strAKASesion, strAKASubCompania);
        }
    }
}
