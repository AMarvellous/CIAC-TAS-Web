@model adminlte.Classes.TASEncuestaAlumnoInstructorDetalle

@{
    ViewBag.Title = "TASEstudianteEncuestaAlumnoInstructorEncuestar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            ASA
            <small>Pregunta</small>
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li><a href="#">Estudiante</a></li>
            <li class="active">Encuesta al Instructor</li>
        </ol>
    </section>
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box box-primary">
            <div id="msjContainer"></div>
            @*<form action="@Url.Action("TASEstudianteEncuestaSatisfaccionEstudiante","TASEstudiante", new {TASEncuestaSatisfaccionEstudianteDetalleForm = Model })" method="post" role="form" enctype="multipart/form-data">*@

            <div class="box-header with-border">
                <h3 class="box-title">CIAC TAS</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @*<form role="form">*@
            @using (Html.BeginForm())
            {
                <div class="box-body table-responsive">

                    @Html.AntiForgeryToken()

                    <div class="form-group">
                        @Html.Label("Programa")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-paragraph"></i>
                            </div>
                            @Html.TextBoxFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Programa, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Programa, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>

                    <div class="form-group">
                        @Html.Label("Grupo")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-users"></i>
                            </div>
                            @Html.TextBoxFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Grupo, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Grupo, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>

                    <div class="form-group">
                        @Html.Label("Materia")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-users"></i>
                            </div>
                            @Html.TextBoxFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Materia, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Materia, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>

                    <div class="form-group" style="display:none;">
                        @Html.Label("Instructor")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-users"></i>
                            </div>
                            @Html.TextBoxFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.InstructorLic, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.InstructorLic, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>

                    <div class="form-group">
                        @Html.Label("Fecha referencia de encuesta")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-users"></i>
                            </div>
                            @Html.TextBoxFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Fecha, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.etTASConfiguracionEncuestaAlumnoInstructor.Fecha, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>


                    @for (int cont = 0; cont < Model.ltCriterioEvaluacion.Count; cont++)
                    {
                        <div class="row">
                            <div class="column1" style="">
                                @Html.TextBoxFor(model => model.ltLinea[cont], new { @class = "form-control", @readonly = "readonly" })
                            </div>
                            <diF class="column2" style="">
                                @Html.TextBoxFor(model => model.ltCriterioEvaluacion[cont], new { @class = "form-control ", @readonly = "readonly" })
                            </diF>
                            <div class="column3" style="">
                                @*@Html.DropDownListFor(model =>, new SelectList(Model.ltGradoSatisfaccion as System.Collections.IEnumerable, "COD_DEST", "DESCRIPCIO", @ViewBag.DestinoImpresionUsuario), new { @class = "form-control" })*@
                                @Html.DropDownListFor(model => model.ltGradoSatisfaccion[cont], (SelectList)@ViewBag.ltGradoSatisfaccion, "Seleccione Grado Satisfaccion", new { @class = "form-control controlar respControl" })
                            </div>
                        </div>
                    }
                    <br />
                    <div class="form-group">
                        @Html.Label("Observaciones y Sugerencias")
                        <div class="input-group">
                            <div class="input-group-addon">
                                <i class="fa fa-users"></i>
                            </div>
                            @Html.TextAreaFor(model => model.ObservacionSugerencias, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ObservacionSugerencias, "", new { @class = "text-danger" })
                            @*<input type="number" class="form-control">*@
                        </div>
                        <!-- /.input group -->
                    </div>

                    @*@Html.EditorFor(model => model.ObservacionSugerencias, new { htmlAttributes = new { @class = "form-control" } })*@

                    @*@{
                            Model.ltCriterioEvaluacion.Add(1);
                            Model.ltCriterioEvaluacion.Add(2);
                            Model.ltCriterioEvaluacion.Add(4);
                        }*@

                </div>
                <!-- /.box-body -->

                <div class="box-footer">
                    <button type="submit" class="btn btn-primary">Aceptar</button>
                </div>
                @*</form>*@
            }

            @*@{
                    Model.ltCriterioEvaluacion.Add(1);
                    Model.ltCriterioEvaluacion.Add(2);
                    Model.ltCriterioEvaluacion.Add(4);
                }*@
            @*</form>*@
        </div>
        <!-- /.box -->
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

<style>
    * {
        box-sizing: border-box;
    }

    /* Create two equal columns that floats next to each other */
    .column1 {
        float: left;
        width: 5%;
        padding: 10px;
    }

    .column2 {
        float: left;
        width: 65%;
        padding: 10px;
    }

    .column3 {
        float: left;
        width: 30%;
        padding: 10px;
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }
</style>

@section scripts
{

    <script type="text/javascript">

        $('form').submit(function () {

            // Get the Login Name value and trim it
            var ObservacionSugerencias = $.trim($('#ObservacionSugerencias').val());
            var lanzarMensaje = false;

            $.each($(".respControl option:selected"), function () {
                //console.log(typeof ($(this).val()));
                if ($(this).val() === '') {
                    //alert('Llene todos los campos');
                    lanzarMensaje = true;
                }
            });           

            if (ObservacionSugerencias === '') {
                //alert('Llene todos los campos');
                lanzarMensaje = true;
            }

            if (lanzarMensaje) {
                alert('Llene todos los campos');
                return false;
            }

        });

    </script>

}
