@model adminlte.TASRegistroNotasService.TASRegistroNotasEstudianteEntity



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ASA-Pregunta-Editar</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="box-body">

            <div class="form-group">
                @Html.Label("Grupo")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-question"></i>
                    </div>
                    @Html.EditorFor(model => model.Grupo, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Grupo, "", new { @class = "text-danger" })

                </div>
                <!-- /.input group -->
            </div>

            <div class="form-group">
                @Html.Label("Materia")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.EditorFor(model => model.Materia, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Materia, "", new { @class = "text-danger" })

                </div>
                <!-- /.input group -->
            </div>


            @*<div class="form-group">
            @Html.Label("Es respuesta correcta")
            <div class="input-group">
                <div class="input-group-addon">
                    <i class="fa fa-check-circle-o"></i>
                </div>
                @Html.CheckBoxFor(model => model.Correcto)
                @Html.ValidationMessageFor(model => model.Correcto, "", new { @class = "text-danger" })

            </div>
        </div>*@

            <div class="form-group">
                @Html.Label("Codigo Estudiante")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.EditorFor(model => model.CodigoTASEstudiante, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.CodigoTASEstudiante, "", new { @class = "text-danger" })

                </div>
                <!-- /.input group -->
            </div>

            <div class="form-group">
                @Html.Label("Nombre Estudiante")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.EditorFor(model => model.NombreEstudiante, new { htmlAttributes = new { @class = "form-control", disabled = "disabled", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.NombreEstudiante, "", new { @class = "text-danger" })

                </div>
                <!-- /.input group -->
            </div>

            @{
                var etTASRegistroNotas = (adminlte.TASRegistroNotasService.TASRegistroNotasEntity)ViewBag.ltTASRegistroNotas;
                var NumeroProgresos = etTASRegistroNotas.NumeroProgresos;
                var NumeroDominios = etTASRegistroNotas.NumeroDominios;
                List<string> NombreReferenciaProgreso = etTASRegistroNotas.NombreReferenciaProgreso.Split(new string[] { "*.-Split-.*" }, StringSplitOptions.None).ToList();
                string NombreReferenciaDominio = etTASRegistroNotas.NombreReferenciaDominio;
                List<string> PorcentajeIndividualProgreso = etTASRegistroNotas.PorcentajeIndividualProgreso.Split(new string[] { "*.-Split-.*" }, StringSplitOptions.None).ToList();
                string PorcentajeIndividualDominio = etTASRegistroNotas.PorcentajeIndividualDominio;
            }

            <div class="form-group">
                @Html.Label("Porcentaje Progreso 1")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.TextBox("PorcentajeProgreso1P", etTASRegistroNotas.PorcentajeProgreso1P, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })

                </div>
                <!-- /.input group -->
            </div>

            <div class="form-group">
                @Html.Label("Numero Progresos")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.TextBox("NumeroProgresos", NumeroProgresos, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })

                </div>
                <!-- /.input group -->
            </div>

            @for (int i = 0; i < NombreReferenciaProgreso.Count; i++)
            {
                <div class="row divCreated">
                    <div class="col-xs-4">
                        @*<input type="text" class="form-control nombreEvaluacion">*@
                        @Html.TextBox("NombreReferenciaProgreso", NombreReferenciaProgreso[i], new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    </div>
                    <div class="col-xs-4">
                        @*<input type="text" class="form-control allownumericwithdecimal porcentajeEvaluacion" placeholder="Porcentaje Progreso">*@
                        @Html.TextBox("PorcentajeIndividualProgreso", PorcentajeIndividualProgreso[i], new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                    </div>
                    <div class="col-xs-4">
                        <input id="progreso_@i" type="text" class="form-control allownumericwithdecimal sumProgreso" placeholder="Nota">
                    </div>
                </div>
            }


            <div class="form-group">
                @Html.Label("Porcentaje Dominio 1")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.TextBox("PorcentajeDominio1D", etTASRegistroNotas.PorcentajeDominio1D, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })

                </div>
                <!-- /.input group -->
            </div>

            <div class="form-group">
                @Html.Label("Numero Dominios")
                <div class="input-group">
                    <div class="input-group-addon">
                        <i class="fa fa-comment-o"></i>
                    </div>
                    @Html.TextBox("NumeroDominios", NumeroDominios, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })

                </div>
                <!-- /.input group -->
            </div>

            <div class="row divCreated">
                <div class="col-xs-4">
                    @*<input type="text" class="form-control nombreEvaluacion">*@
                    @Html.TextBox("NombreReferenciaDominio", NombreReferenciaDominio, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="col-xs-4">
                    @*<input type="text" class="form-control allownumericwithdecimal porcentajeEvaluacion" placeholder="Porcentaje Progreso">*@
                    @Html.TextBox("PorcentajeIndividualDominio", PorcentajeIndividualDominio, new { @class = "form-control", disabled = "disabled", @readonly = "readonly" })
                </div>
                <div class="col-xs-4">
                    @Html.EditorFor(model => model.Dominio1D, new { htmlAttributes = new { @class = "form-control allownumericwithdecimal" } })
                </div>
            </div>

            @Html.HiddenFor(model => model.Progreso1P)

        </div>

        <div class="modal-footer">
            <span id="progress" class="text-center" style="display: none;">

                Wait..
            </span>

            <input class="btn btn-primary" type="submit" value="Aceptar" />
            <button class="btn btn-warning" data-dismiss="modal" style="">
                Cerrar
            </button>
        </div>

    </div>
}

@*@Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/lib")*@

<style>
    .form-horizontal .form-group {
        margin-right: 0 !important;
    }
</style>

@*@Scripts.Render("~/bundles/jquery")*@
<script type="text/javascript"> 

    $(document).ready(function() {
        $(".allownumericwithdecimal").on("keypress keyup blur", function (event) {
                //this.value = this.value.replace(/[^0-9\.]/g,'');
                $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
                if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                    event.preventDefault();
                }
        });  

        var progresoarr = $("#Progreso1P").val()
        var splitprogreso = progresoarr.split('*.-Split-.*')
        //console.log(splitprogreso)
        $("input.sumProgreso").each(function (index) {
            
            //alert($("#Progreso1P").val())
            //alert(index)
            $("#progreso_" + index).val(splitprogreso[index]);
            //alert($("#progreso_"+index).val())
        });
    })

    $('form').submit(function () {

        var SumPorcentaje = 0;
        var strPorcentaje = '';
        $("input.sumProgreso").each(function () {
            strPorcentaje += "*.-Split-.*" + Number($(this).val());
            SumPorcentaje += Number($(this).val());
            //alert(Number($(this).val()))
            //alert(strPorcentaje)
        });

        $("#Progreso1P").val(strPorcentaje);
    });

</script>
